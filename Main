import pandas as pd
from pandas.api.types import is_numeric_dtype
import streamlit as st
from io import StringIO
import matplotlib.pyplot as plt
from scipy import stats
from scipy.stats import mannwhitneyu

st.title("Homework 2")
st.markdown("## Загрузка датасета")
uploaded_file = st.file_uploader("Загрузите CSV файл:", type="csv")

# Инициализация работы с датасетом, если он загружен
if uploaded_file is not None:
    bytes_data = uploaded_file.getvalue()

    stringio = StringIO(uploaded_file.getvalue().decode("utf-8"))

    string_data = stringio.read()

    dataframe = pd.read_csv(uploaded_file)
    st.dataframe(dataframe.head())

    st.markdown("## Выбор двух переменных")
    # Создание dropdown элементов
    col1, col2 = st.columns(2)
    with col1:
        val1 = st.selectbox("Выберете первую переменную:", dataframe.columns)
    with col2:
        val2 = st.selectbox("Выберете вторую переменную:", dataframe.columns)

    # Вывод графиков по ним
    fig, axes = plt.subplots(nrows = 2, ncols = 1, figsize=(9, 10))
    if is_numeric_dtype(dataframe[val1]):
        axes[0].hist(dataframe[val1], density=True)
        axes[0].set_title(val1)
    else:
        axes[0].pie(dataframe[val1].value_counts().values, labels=dataframe[val1].value_counts().index.to_list())
        axes[0].set_title(val1)

    if is_numeric_dtype(dataframe[val2]):
        axes[1].hist(dataframe[val2], density=True)
        axes[1].set_title(val2)
    else:
        axes[1].pie(dataframe[val2].value_counts().values, labels=dataframe[val2].value_counts().index.to_list())
        axes[1].set_title(val2)

    st.pyplot(fig)

    st.markdown("## Проверка гипотезы")
    val = st.selectbox("Метод тестирования:", ["T-Test", "U-Test", "Chi-Test"])
    try:
        p_value = 1
        if val == "T-Test":
            p_value = stats.ttest_ind(dataframe[val1], dataframe[val2], equal_var=False).pvalue
        if val == "U-Test":
            p_value = mannwhitneyu(dataframe[val1], dataframe[val2]).pvalue
        if val == "Chi-Test":
            cross_df = pd.crosstab(dataframe[val1], dataframe[val2], margins=True)
            observed = cross_df.iloc[0:-1, 0:-1]
            st.dataframe(observed)
            p_value = stats.chi2_contingency(observed).pvalue
        st.text(f"p-value: {round(p_value, 4)}")

    except Exception:
        st.error("ОШИБКА!!!! Для выбранных переменных нельзя высчитать p-value, используя выбранный алгоритм")
